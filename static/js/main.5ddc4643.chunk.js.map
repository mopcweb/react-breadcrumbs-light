{"version":3,"sources":["utils/serviceWorker.ts","utils/overrides.ts","utils/routes.tsx","pages/App/index.tsx","pages/Dashboard/Header/index.tsx","pages/Dashboard/Header/styles.ts","pages/Dashboard/Nav/index.tsx","pages/Dashboard/Nav/styles.ts","pages/Dashboard/index.tsx","pages/Dashboard/styles.ts","pages/Home/index.tsx","pages/Home/styles.ts","pages/NotFound/index.tsx","pages/NotFound/styles.ts","pages/Settings/index.tsx","pages/Clients/index.tsx","pages/Client/index.tsx","pages/Calendar/index.tsx","services/helpers.ts","pages/Month/index.tsx","pages/Day/index.tsx","index.tsx","pages/NotFound/img.jpg"],"names":["Boolean","window","location","hostname","match","clients","calendar","routes","title","link","icon","react_default","a","createElement","Home_default","List_default","children","Settings_default","Person_default","CalendarToday_default","Today_default","ViewDay_default","App","react","react_router_dom","react_router","path","component","Dashboard","NotFound","withStyles","theme","Root","flexGrow","backgroundColor","palette","common","black","Btn","marginRight","spacing","Title","MenuItem","marginLeft","_ref","classes","toggleNav","_useState","useState","_useState2","Object","slicedToArray","anchor","setAnchor","closeMenu","menu","Menu","anchorEl","open","onClose","onClick","className","Input_default","AppBar","Toolbar","IconButton","edge","color","aria-label","Menu_default","Typography","variant","aria-owns","aria-haspopup","event","currentTarget","AccountCircle_default","Nav","top","@media screen and (max-width: 599px)","List","width","Item","Item_active","display","white","primary","main","& svg","state","toggle","Drawer","paper","List_List","map","item","exact","to","key","activeClassName","ListItem","button","ListItemIcon","ListItemText","Divider","paddingTop","flexWrap","height","Wrapper","padding","concat","nav","setNav","Dashboard_Header","lib","separator","NavigateNext_default","notFoundIcon","NotListedLocation_default","Dashboard_Nav","Home","Clients","Settings","Client","Calendar","Month","Day","Code","margin","background","dark","style","justifyContent","alignItems","Card","maxWidth","Img","CardActionArea","CardMedia","image","img","CardContent","gutterBottom","CardActions","Button","size","textAlign","getDaysInMonth","month","Date","getFullYear","getDate","pathname","replace","monthIndex","findIndex","dates","day","push","createMuiTheme","objectSpread","light","contrastText","secondary","lightdark","lightdarkTransparent","ok","warn","ReactDOM","render","MuiThemeProvider","pages_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5ddc4643.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* ################################################################### */\n/*\n/*  MUI Theme overrides\n/*\n/* ################################################################### */\n\n/* ------------------------------------------------------------------- */\n/*                              Palette\n/* ------------------------------------------------------------------- */\n\nexport const palette = {\n  palette: {\n    primary: {\n      light: '#6573c3',\n      main: '#3f51b5',\n      dark: '#2c387e',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff669a',\n      main: '#ff4081',\n      dark: '#b22c5a',\n      contrastText: '#000',\n    },\n    common: {\n      black: '#1c1c1c',\n      lightdark: '#323232',\n      lightdarkTransparent: '#32323266',\n      white: '#fcfaf9',\n    },\n    ok: {\n      light: '#68b36b',\n      main: '#43a047',\n      dark: '#2e7031'\n    },\n    warn: {\n      light: '#f6b45e',\n      main: '#f4a236',\n      dark: '#aa7125'\n    }\n  }\n};\n","/* ################################################################### */\n/*\n/*  App routes\n/*\n/* ################################################################### */\n\nimport React from 'react';\n// import { IReactRoute } from 'react-breadcrumbs-light';\n\n/* ------------------------------------------------------------------- */\n/*                             Material\n/* ------------------------------------------------------------------- */\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from '@material-ui/icons/Person';\nimport ListIcon from '@material-ui/icons/List';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\nimport TodayIcon from '@material-ui/icons/Today';\nimport ViewDayIcon from '@material-ui/icons/ViewDay';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\n/* ------------------------------------------------------------------- */\n/*                             Interface\n/* ------------------------------------------------------------------- */\n\nimport { IReactRoute } from '../interfaces/breadcrumbs';\n\n/* ------------------------------------------------------------------- */\n/*                               Routes\n/* ------------------------------------------------------------------- */\n\n// =====> Service routes\nexport const login: string = '/login';\nexport const logout: string = '/logout';\n\n// =====> Dashboard\nexport const dashboard: string = '/';\nexport const home: string = dashboard;\nexport const clients: string = '/clients';\nexport const calendar: string = '/calendar';\nexport const settings: string = '/settings';\n\n/* ------------------------------------------------------------------- */\n/*                Routes array for nav & breadcrumbs\n/* ------------------------------------------------------------------- */\n\nexport const routes: IReactRoute[] = [\n  { title: 'Home', link: home, icon: <HomeIcon /> },\n  { title: 'Clients', link: clients, icon: <ListIcon />, children: [\n    { title: 'Settings', link: clients + '/settings', icon: <SettingsIcon /> },\n    { title: 'Client № - ', link: clients + '/:id', icon: <PersonIcon /> }\n  ] },\n  { title: 'Calendar', link: calendar, icon: <CalendarTodayIcon />, children: [\n    { title: 'Month: ', link: calendar + '/:month', icon: <TodayIcon />, children: [\n      { title: 'Day: ', link: calendar + '/:month/:day', icon: <ViewDayIcon /> }\n    ] }\n  ] },\n  { title: 'Settings', link: settings, icon: <SettingsIcon /> }\n];\n","/* ################################################################### */\n/*\n/*  App core\n/*\n/* ################################################################### */\n\nimport React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n/* ------------------------------------------------------------------- */\n/*                               Config\n/* ------------------------------------------------------------------- */\n\n// =====> Routes\nimport { dashboard } from '../../utils/routes';\n\n/* ------------------------------------------------------------------- */\n/*                             Containers\n/* ------------------------------------------------------------------- */\n\nimport { Dashboard, NotFound } from '../';\n\n/* ------------------------------------------------------------------- */\n/*                              Component\n/* ------------------------------------------------------------------- */\n\nconst App: React.FC = () => (\n  <Fragment>\n    <Router>\n      <Switch>\n        <Route path={dashboard} component={Dashboard} />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  </Fragment>\n);\n\n/* ------------------------------------------------------------------- */\n/*                            Redux / export\n/* ------------------------------------------------------------------- */\n\nexport default App\n","/* ################################################################### */\n/*\n/*  Header component\n/*\n/* ################################################################### */\n\nimport React, { useState } from 'react';\n\n/* ------------------------------------------------------------------- */\n/*                            Material\n/* ------------------------------------------------------------------- */\n\nimport { withStyles } from '@material-ui/styles';\n\n// =====> Components\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n// =====> Icons\nimport MenuIcon from '@material-ui/icons/Menu';\nimport PersonIcon from '@material-ui/icons/Person';\nimport InputIcon from '@material-ui/icons/Input';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\n/* ------------------------------------------------------------------- */\n/*                              Config\n/* ------------------------------------------------------------------- */\n\n// =====> Styles\nimport styles from './styles';\n\n// =====> Type\ntype Props = {\n  classes: { [x: string]: string };\n  toggleNav: (event: React.MouseEvent) => void\n};\n\n/* ------------------------------------------------------------------- */\n/*                             Component\n/* ------------------------------------------------------------------- */\n\nconst Header: React.FC<Props> = ({ classes, toggleNav }) => {\n  // State\n  const [anchor, setAnchor] = useState<null | HTMLElement>(null);\n\n  // Handle menu open\n  const openMenu = (event: React.MouseEvent<HTMLElement>) =>\n    setAnchor(event.currentTarget);\n\n  // Handle menu close\n  const closeMenu = () =>\n    setAnchor(null);\n\n  // Profile menu\n  const menu = (\n    <Menu\n      anchorEl={anchor}\n      open={!!anchor}\n      onClose={closeMenu}\n    >\n      <MenuItem onClick={closeMenu}>\n        <PersonIcon />\n        <span className={classes.MenuItem}>Profile</span>\n      </MenuItem>\n      <MenuItem onClick={closeMenu}>\n        <InputIcon />\n        <span className={classes.MenuItem}>Logout</span>\n      </MenuItem>\n    </Menu>\n  );\n\n  // Render\n  return (\n    <AppBar className={classes.Root}>\n      <Toolbar>\n        <IconButton className={classes.Btn}\n          edge='start' color='primary' aria-label='Menu'\n          onClick={toggleNav}\n        >\n          <MenuIcon />\n        </IconButton>\n\n        <Typography variant='h6' className={classes.Title}>\n          Easy deploy\n        </Typography>\n\n        <IconButton\n          edge=\"end\"\n          aria-owns={'material-appbar'}\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          onClick={openMenu}\n        >\n          <AccountCircle />\n        </IconButton>\n      </Toolbar>\n\n      {menu}\n    </AppBar>\n  );\n};\n\n/* ------------------------------------------------------------------- */\n/*                              Export\n/* ------------------------------------------------------------------- */\n\nexport default withStyles(styles)(Header)\n","/* ################################################################### */\n/*\n/*  Header styles\n/*\n/* ################################################################### */\n\nimport { Theme } from '@material-ui/core/styles';\n\n/* ------------------------------------------------------------------- */\n/*                              Styles\n/* ------------------------------------------------------------------- */\n\nexport default (theme: Theme) => ({\n  Root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.common.black\n  },\n  Btn: {\n    marginRight: theme.spacing(2),\n  },\n  Title: {\n    flexGrow: 1,\n  },\n  MenuItem: {\n    marginLeft: theme.spacing(2)\n  }\n});\n","/* ################################################################### */\n/*\n/*  Nav component\n/*\n/* ################################################################### */\n\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n/* ------------------------------------------------------------------- */\n/*                            Material\n/* ------------------------------------------------------------------- */\n\nimport { withStyles } from '@material-ui/styles';\n\n// =====> Components\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\n// =====> Icons\nimport InputIcon from '@material-ui/icons/Input';\n\n/* ------------------------------------------------------------------- */\n/*                              Config\n/* ------------------------------------------------------------------- */\n\n// =====> Routes\nimport { routes } from '../../../utils/routes';\n\n// =====> Styles\nimport styles from './styles';\n\n// =====> Type\ntype Props = {\n  classes: { [x: string]: string };\n  state: boolean;\n  toggle: (event: React.MouseEvent) => void\n};\n\n/* ------------------------------------------------------------------- */\n/*                             Component\n/* ------------------------------------------------------------------- */\n\nconst Nav: React.FC<Props> = ({ classes, state, toggle }) => (\n  <Drawer open={state} onClose={toggle} variant='temporary' classes={{ paper: classes.Nav }}>\n    <List className={classes.List}>\n      {routes.map(item => (\n        <NavLink\n          exact to={item.link}\n          key={item.link}\n          activeClassName={classes.Item_active}\n          onClick={toggle}\n        >\n          <ListItem button>\n            {item.icon && <ListItemIcon>{item.icon}</ListItemIcon>}\n            <ListItemText primary={item.title} />\n          </ListItem>\n        </NavLink>\n      ))}\n    </List>\n    <Divider />\n    <ListItem button onClick={toggle}>\n      <ListItemIcon><InputIcon /></ListItemIcon>\n      <ListItemText primary='Logout' />\n    </ListItem>\n  </Drawer>\n);\n\n/* ------------------------------------------------------------------- */\n/*                              Export\n/* ------------------------------------------------------------------- */\n\nexport default withStyles(styles)(Nav);\n","/* ################################################################### */\n/*\n/*  Nav styles\n/*\n/* ################################################################### */\n\nimport { Theme } from '@material-ui/core/styles';\n\n/* ------------------------------------------------------------------- */\n/*                              Styles\n/* ------------------------------------------------------------------- */\n\nexport default (theme: Theme) => ({\n  Nav: {\n    top: theme.spacing(8),\n\n    '@media screen and (max-width: 599px)': {\n      top: theme.spacing(7),\n    }\n  },\n  List: { width: '250px' },\n  Item: {},\n  Item_active: {\n    display: 'block',\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.primary.main,\n\n    '& svg': {\n      color: theme.palette.common.white\n    }\n  }\n});\n","/* ################################################################### */\n/*\n/*  Dashboard component\n/*\n/* ################################################################### */\n\nimport React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Breadcrumbs } from 'react-breadcrumbs-light'\n\n/* ------------------------------------------------------------------- */\n/*                             Components\n/* ------------------------------------------------------------------- */\n\n// import { Breadcrumbs } from '../../components';\nimport Header from './Header';\nimport Nav from './Nav';\n\n/* ------------------------------------------------------------------- */\n/*                             Containers\n/* ------------------------------------------------------------------- */\n\nimport {\n  Home, NotFound, Settings, Clients, Client, Calendar, Month, Day\n} from '../';\n\n/* ------------------------------------------------------------------- */\n/*                              Material\n/* ------------------------------------------------------------------- */\n\nimport { withStyles } from '@material-ui/styles';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NotListedLocationIcon from '@material-ui/icons/NotListedLocation';\n\n/* ------------------------------------------------------------------- */\n/*                               Config\n/* ------------------------------------------------------------------- */\n\n// =====> Routes\nimport { home, clients, calendar, settings } from '../../utils/routes';\n\nimport { routes } from '../../utils/routes';\n\n// =====> Styles\nimport styles from './styles';\n\n// =====> Type\ntype Props = {\n  classes: { [x: string]: string };\n};\n\n/* ------------------------------------------------------------------- */\n/*                              Component\n/* ------------------------------------------------------------------- */\n\nconst Dashboard: React.FC<Props> = ({ classes }) => {\n  // State\n  const [nav, setNav] = useState(false);\n\n  // Handle open/close nav\n  const toggleNav = () => setNav(!nav);\n\n  // Render\n  return (\n    <div className={classes.Dashboard}>\n      <Header toggleNav={toggleNav} />\n      <Breadcrumbs routes={routes} separator={<NavigateNextIcon />} notFoundIcon={<NotListedLocationIcon />} />\n      <Nav state={nav} toggle={toggleNav} />\n\n      <div className={classes.Wrapper}>\n        <Switch>\n          <Route exact path={home} component={Home} />\n          <Route exact path={clients} component={Clients} />\n          <Route exact path={`${clients}/settings`} component={Settings} />\n          <Route exact path={`${clients}/:id`} component={Client} />\n          <Route exact path={calendar} component={Calendar} />\n          <Route exact path={`${calendar}/:month`} component={Month} />\n          <Route exact path={`${calendar}/:month/:day`} component={Day} />\n          <Route exact path={settings} component={Settings} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </div>\n  )\n};\n\n/* ------------------------------------------------------------------- */\n/*                               Export\n/* ------------------------------------------------------------------- */\n\nexport default withStyles(styles)(Dashboard);\n","/* ################################################################### */\n/*\n/*  Dashboard styles\n/*\n/* ################################################################### */\n\nimport { Theme } from '@material-ui/core/styles';\n\n/* ------------------------------------------------------------------- */\n/*                              Styles\n/* ------------------------------------------------------------------- */\n\nexport default (theme: Theme): any => ({\n  Dashboard: {\n    paddingTop: theme.spacing(8),\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%',\n    height: '100%',\n\n    '@media screen and (max-width: 599px)': {\n      paddingTop: theme.spacing(7),\n    }\n  },\n  Wrapper: {\n    padding: theme.spacing(3),\n    width: '100%',\n    height: `calc(100% - ${theme.spacing(5)}px)`,\n  }\n});\n","/* ################################################################### */\n/*\n/*  Home component\n/*\n/* ################################################################### */\n\nimport React from 'react';\n\n/* ------------------------------------------------------------------- */\n/*                              Material\n/* ------------------------------------------------------------------- */\n\nimport { withStyles } from '@material-ui/styles';\n\n/* ------------------------------------------------------------------- */\n/*                               Config\n/* ------------------------------------------------------------------- */\n\n// =====> Styles\nimport styles from './styles';\n\ntype Props = {\n  classes: { [x: string]: string };\n};\n\n/* ------------------------------------------------------------------- */\n/*                              Component\n/* ------------------------------------------------------------------- */\n\nconst Home: React.FC<Props> = ({ classes }) => {\n  // Example route config\n  const config = `[\n  { title: 'Home', link: home, icon: '<HomeIcon />' }, \\n\n  { title: 'Clients', link: clients, icon: '<ListIcon />', children: [ \\n\n    { title: 'Settings', link: clients + '/settings', icon: '<SettingsIcon />' }, \\n\n    { title: 'Client № - ', link: clients + '/:id', icon: '<PersonIcon />' } \\n\n  ] }, \\n\n  { title: 'Calendar', link: calendar, icon: <CalendarTodayIcon />, children: [ \\n\n    { title: 'Month: ', link: calendar + '/:month', icon: <TodayIcon />, children: [ \\n\n      { title: 'Day: ', link: calendar + '/:month/:day', icon: <ViewDayIcon /> } \\n\n    ] } \\n\n  ] }, \\n\n  { title: 'Settings', link: settings, icon: '<SettingsIcon />' } \\n\n]`\n\n  // Render\n  return (\n    <div className={classes.Home}>\n      <div style={{ 'display': 'flex', 'justifyContent': 'center' }}>\n        Breadcrumbs routes config\n      </div>\n      <pre className={classes.Code}>\n        {config}\n      </pre>\n    </div>\n  )\n};\n\n/* ------------------------------------------------------------------- */\n/*                               Export\n/* ------------------------------------------------------------------- */\n\nexport default withStyles(styles)(Home);\n","/* ################################################################### */\n/*\n/*  Home styles\n/*\n/* ################################################################### */\n\nimport { Theme } from '@material-ui/core/styles';\n\n/* ------------------------------------------------------------------- */\n/*                              Styles\n/* ------------------------------------------------------------------- */\n\nexport default (theme: Theme) => ({\n  Home: {\n    width: '100%',\n    height: '100%',\n  },\n  Code: {\n    margin: `${theme.spacing(5)}px auto`,\n    padding: theme.spacing(1),\n    width: 'fit-content',\n    // background: theme.palette.common.black,\n    background: theme.palette.primary.dark,\n    color: theme.palette.common.white\n  }\n});\n","/* ################################################################### */\n/*\n/*  NotFound component\n/*\n/* ################################################################### */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\n/* ------------------------------------------------------------------- */\n/*                              Material\n/* ------------------------------------------------------------------- */\n\nimport { withStyles } from '@material-ui/styles';\n\n// =====> Components\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n/* ------------------------------------------------------------------- */\n/*                               Config\n/* ------------------------------------------------------------------- */\n\n// =====> Static img\nimport img from './img.jpg';\n\n// =====> Routes\nimport { home } from '../../utils/routes';\n\n// =====> Styles\nimport styles from './styles';\n\ntype Props = {\n  classes: { [x: string]: string };\n};\n\n/* ------------------------------------------------------------------- */\n/*                              Component\n/* ------------------------------------------------------------------- */\n\nconst NotFound: React.FC<Props> = ({ classes }) => {\n  // Render\n  return (\n    <div className={classes.NotFound}>\n      <Card className={classes.Card}>\n        <Link to={home}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.Img}\n              image={img}\n              title='Page not found'\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                404\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Sorry, it seems like this page not found\n              </Typography>\n            </CardContent>\n          </CardActionArea>\n        </Link>\n        <CardActions>\n          <Link to={home}>\n            <Button size=\"small\" color=\"primary\">\n              Try search from the beginning\n            </Button>\n          </Link>\n        </CardActions>\n      </Card>\n    </div>\n  )\n};\n\n/* ------------------------------------------------------------------- */\n/*                               Export\n/* ------------------------------------------------------------------- */\n\nexport default  withStyles(styles)(NotFound);\n","/* ################################################################### */\n/*\n/*  NotFound styles\n/*\n/* ################################################################### */\n\n/* ------------------------------------------------------------------- */\n/*                              Styles\n/* ------------------------------------------------------------------- */\n\nexport default () => ({\n  NotFound: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n  },\n  Card: {\n    width: '500px',\n    maxWidth: '95%',\n  },\n  Img: {\n    height: '150px'\n  }\n});\n","/* ################################################################### */\n/*\n/*  Settings component\n/*\n/* ################################################################### */\n\nimport React, { Fragment } from 'react';\n\n/* ------------------------------------------------------------------- */\n/*                               Config\n/* ------------------------------------------------------------------- */\n\n// =====> Type\ntype Props = {\n  classes: { [x: string]: string };\n};\n\n/* ------------------------------------------------------------------- */\n/*                              Component\n/* ------------------------------------------------------------------- */\n\nconst Settings: React.FC<Props> = () => (\n  <Fragment>\n    Settings works\n  </Fragment>\n);\n\n/* ------------------------------------------------------------------- */\n/*                               Export\n/* ------------------------------------------------------------------- */\n\nexport default Settings\n","/* ################################################################### */\n/*\n/*  Settings component\n/*\n/* ################################################################### */\n\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n/* ------------------------------------------------------------------- */\n/*                              Material\n/* ------------------------------------------------------------------- */\n\nimport Button from '@material-ui/core/Button';\n\n/* ------------------------------------------------------------------- */\n/*                               Config\n/* ------------------------------------------------------------------- */\n\n// =====> Routes\nimport { clients } from '../../utils/routes';\n\n// =====> Type\ntype Props = {\n  classes: { [x: string]: string };\n};\n\n/* ------------------------------------------------------------------- */\n/*                              Component\n/* ------------------------------------------------------------------- */\n\nconst Clients: React.FC<Props> = () => (\n  <Fragment>\n    <div style={{ textAlign: 'center' }}>Clients list works</div>\n\n    <div style={{ margin: '40px auto', display: 'flex', justifyContent: 'space-around' }}>\n      <Link to={`${clients}/Some awesome client`}>\n        <Button>Go to Some awesome client</Button>\n      </Link>\n      <Link to={`${clients}/settings`}>\n        <Button>Go to clients Settings</Button>\n      </Link>\n    </div>\n  </Fragment>\n);\n\n/* ------------------------------------------------------------------- */\n/*                               Export\n/* ------------------------------------------------------------------- */\n\nexport default Clients\n","/* ################################################################### */\n/*\n/*  Settings component\n/*\n/* ################################################################### */\n\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n/* ------------------------------------------------------------------- */\n/*                              Material\n/* ------------------------------------------------------------------- */\n\nimport Button from '@material-ui/core/Button';\n\n/* ------------------------------------------------------------------- */\n/*                               Config\n/* ------------------------------------------------------------------- */\n\n// =====> Routes\nimport { clients } from '../../utils/routes';\n\n// =====> Type\ntype Props = {\n  classes: { [x: string]: string };\n};\n\n/* ------------------------------------------------------------------- */\n/*                              Component\n/* ------------------------------------------------------------------- */\n\nconst Client: React.FC<Props> = () => (\n  <Fragment>\n    <div style={{ textAlign: 'center' }}>This is client component</div>\n\n    <div style={{ margin: '40px auto', display: 'flex', justifyContent: 'space-around' }}>\n      <Link to={`${clients}/Some awesome client/oops/route/not/found`}>\n        <Button>Go to some undefined route</Button>\n      </Link>\n    </div>\n  </Fragment>\n);\n\n/* ------------------------------------------------------------------- */\n/*                               Export\n/* ------------------------------------------------------------------- */\n\nexport default Client\n","/* ################################################################### */\n/*\n/*  Settings component\n/*\n/* ################################################################### */\n\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n/* ------------------------------------------------------------------- */\n/*                              Material\n/* ------------------------------------------------------------------- */\n\nimport Button from '@material-ui/core/Button';\n\n/* ------------------------------------------------------------------- */\n/*                               Config\n/* ------------------------------------------------------------------- */\n\n// =====> Routes\nimport { calendar } from '../../utils/routes';\n\n// =====> Type\ntype Props = {\n  classes: { [x: string]: string };\n};\n\n/* ------------------------------------------------------------------- */\n/*                              Component\n/* ------------------------------------------------------------------- */\n\nconst Calendar: React.FC<Props> = () => {\n  // Months\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July',\n    'August', 'September', 'October', 'November', 'December'\n  ];\n\n  // Render\n  return (\n    <Fragment>\n      <div style={{ textAlign: 'center' }}>Calendar works</div>\n\n      <div style={{\n         margin: '40px auto', display: 'flex', justifyContent: 'space-between',\n         flexWrap: 'wrap'\n      }}>\n        {months.map(item => (\n          <Link to={`${calendar}/${item}`} key={item} style={{ width: '25%' }}>\n            <Button>Select {item}</Button>\n          </Link>\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\n/* ------------------------------------------------------------------- */\n/*                               Export\n/* ------------------------------------------------------------------- */\n\nexport default Calendar\n","/* ################################################################### */\n/*\n/*  Service which provides small useful functions (methods)\n/*\n/* ################################################################### */\n\n/* ------------------------------------------------------------------- */\n/*                      Convert into FormData\n/* ------------------------------------------------------------------- */\n\nexport const formUrlEncoded = (x: any) =>\n   Object.keys(x).reduce((p, c) => p + `&${c}=${encodeURIComponent(x[c])}`, '')\n\n/* ------------------------------------------------------------------- */\n/*                       Remove params from url\n/* ------------------------------------------------------------------- */\n\nexport const removeParams = (url: string): string => url.replace(/\\?.*/gi, '');\n\n/* ------------------------------------------------------------------- */\n/*                       Check if object isEmpty\n/* ------------------------------------------------------------------- */\n\nexport const isEmpty = (obj: { [x: string]: any }): boolean => {\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key))\n      return false;\n  };\n\n  return true;\n};\n\n/* ------------------------------------------------------------------- */\n/*                       Get max days in month\n/* ------------------------------------------------------------------- */\n\nexport const getDaysInMonth = (month: number) =>\n  new Date(new Date().getFullYear(), month, 0).getDate();\n\n/* ------------------------------------------------------------------- */\n/*                       Uppercase first letter\n/* ------------------------------------------------------------------- */\n\nexport const makeFirstLetterUp = (item: string): string =>\n  item.slice(0, 1).toUpperCase() + item.slice(1);\n\n/* ------------------------------------------------------------------- */\n/*                             Find param\n/* ------------------------------------------------------------------- */\n\nexport const findParam = (link: string): boolean =>\n  link.indexOf('/:') !== -1;\n\n/* ------------------------------------------------------------------- */\n/*                  Find min length & it's link index\n/* ------------------------------------------------------------------- */\n\nexport const findMin = (arr: any) => {\n  // Define first vars\n  let min = arr[0].link.length;\n  let index: number = 0;\n\n  // Iterate over array\n  for (let i = 1; i < arr.length; i++) {\n    // Define current link length\n    let v = arr[i].link.length;\n\n    // Update if is less\n    min = (v < min) ? v : min;\n\n    // Update index\n    if (min === v)\n      index = i;\n  };\n\n  // Return\n  return { min, index };\n};\n","/* ################################################################### */\n/*\n/*  Settings component\n/*\n/* ################################################################### */\n\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n/* ------------------------------------------------------------------- */\n/*                              Material\n/* ------------------------------------------------------------------- */\n\nimport Button from '@material-ui/core/Button';\n\n/* ------------------------------------------------------------------- */\n/*                               Config\n/* ------------------------------------------------------------------- */\n\n// =====> Routes\nimport { calendar } from '../../utils/routes';\n\n// =====> Services\nimport { getDaysInMonth } from '../../services';\n\n// =====> Type\ntype Props = {\n  classes: { [x: string]: string };\n};\n\n/* ------------------------------------------------------------------- */\n/*                              Component\n/* ------------------------------------------------------------------- */\n\nconst Month: React.FC<Props> = () => {\n  // Months\n  const months = [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July',\n    'August', 'September', 'October', 'November', 'December'\n  ];\n\n  // Current month\n  const month: string = window.location.pathname.replace(/^\\/.*\\//, '');\n\n  // Current month index\n  const monthIndex: number = months.findIndex(item => item === month);\n\n  // Month days\n  const dates: number[] = [];\n\n  // Push into array\n  let day = 1;\n  while (day <= getDaysInMonth(monthIndex + 1))\n    dates.push(day++);\n\n  // Render\n  return (\n    <Fragment>\n      <div style={{ textAlign: 'center' }}>Your choice: {month} - {monthIndex}</div>\n\n      <div style={{\n         margin: '40px auto', display: 'flex', justifyContent: 'flex-start',\n         flexWrap: 'wrap'\n      }}>\n        {dates.map(item => (\n          <Link to={`${calendar}/${month}/${item}th`} key={item} style={{ width: '25%' }}>\n            <Button>Select {item}th</Button>\n          </Link>\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\n/* ------------------------------------------------------------------- */\n/*                               Export\n/* ------------------------------------------------------------------- */\n\nexport default Month\n","/* ################################################################### */\n/*\n/*  Settings component\n/*\n/* ################################################################### */\n\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\n/* ------------------------------------------------------------------- */\n/*                              Material\n/* ------------------------------------------------------------------- */\n\nimport Button from '@material-ui/core/Button';\n\n/* ------------------------------------------------------------------- */\n/*                               Config\n/* ------------------------------------------------------------------- */\n\n// =====> Routes\nimport { home } from '../../utils/routes';\n\n// =====> Type\ntype Props = {\n  classes: { [x: string]: string };\n};\n\n/* ------------------------------------------------------------------- */\n/*                              Component\n/* ------------------------------------------------------------------- */\n\nconst Day: React.FC<Props> = () => {\n  // Current day\n  const day: string = window.location.pathname.replace(/^\\/.*\\//, '');\n\n  // Render\n  return (\n    <Fragment>\n      <div style={{ textAlign: 'center' }}>Your choice: {day}</div>\n\n      <div style={{ margin: '40px auto', display: 'flex', justifyContent: 'space-around' }}>\n        <Link to={home}>\n          <Button>Go home</Button>\n        </Link>\n      </div>\n    </Fragment>\n  )\n};\n\n/* ------------------------------------------------------------------- */\n/*                               Export\n/* ------------------------------------------------------------------- */\n\nexport default Day\n","/* ################################################################### */\n/*\n/*  Client core\n/*\n/* ################################################################### */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/* ------------------------------------------------------------------- */\n/*                              Config\n/* ------------------------------------------------------------------- */\n\n// =====> Service worker\nimport * as serviceWorker from './utils/serviceWorker';\n\n// =====> Variables & overrides\nimport { palette } from './utils/overrides';\n\n// =====> Styles\nimport './index.sass';\n\n/* ------------------------------------------------------------------- */\n/*                                App\n/* ------------------------------------------------------------------- */\n\nimport { App } from './pages';\n\n/* ------------------------------------------------------------------- */\n/*                             Material\n/* ------------------------------------------------------------------- */\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n/* ------------------------------------------------------------------- */\n/*                              Theme\n/* ------------------------------------------------------------------- */\n\n// =====> Create theme & add custom variables into theme object\nconst theme = createMuiTheme({\n  ...palette\n});\n\n// =====> Console log theme\n// console.log('=====> theme', theme);\n\n/* ------------------------------------------------------------------- */\n/*                              Render\n/* ------------------------------------------------------------------- */\n\nReactDOM.render(\n  <MuiThemeProvider theme={theme}>\n    <App />\n  </MuiThemeProvider>,\n  document.getElementById('root')\n);\n\n/* ------------------------------------------------------------------- */\n/*                           Service worker\n/* ------------------------------------------------------------------- */\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/img.34dfeed2.jpg\";"],"sourceRoot":""}